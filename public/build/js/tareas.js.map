{"version":3,"sources":["tareas.js"],"names":["modal","formulario","tareas","tareasFiltradas","filtros","document","querySelectorAll","dashboardContainer","querySelector","mostrarFormulario","edicion","tarea","createElement","classList","add","innerHTML","nombre","appendChild","setTimeout","remove","addEventListener","e","cerrarModal","target","preventDefault","tareaActualizada","value","trim","async","btnSubmit","disabled","actualizarTarea","mostrarAlerta","cambiarNombreTarea","validarFormulario","modal1","contains","length","url","location","origin","datosUrl","obtenerDatosUrl","datos","FormData","append","id","res","fetch","method","body","respuesta","json","tipo","mensaje","reset","tareaObj","estado","proyectoId","mostrarTareas","err","agregarTarea","map","console","log","eliminarTarea","filter","listaAnterior","estados","0","1","contenedorPagina","listaTareas","textoNoTareas","className","textContent","forEach","contenedorTarea","dataset","tareaId","nombreTarea","opcionesDiv","btnEstadoTarea","toLowerCase","estadoTarea","ondblclick","nuevoEstado","$res","cambiarEstadoActual","btnEliminarTarea","idTarea","referencia","alertaAnterior","alerta","parentElement","insertBefore","nextElementSibling","urlParams","URLSearchParams","search","Object","fromEntries","entries","resultado","obtenerTareas","filtro","valor","filtrarTareas"],"mappings":"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","file":"tareas.js","sourcesContent":["(function() {\r\n    let tareas = [];\r\n    let tareasFiltradas = [];\r\n    let modal;\r\n    let formulario;\r\n    const filtros = document.querySelectorAll('.filtros-inputs input')\r\n    const dashboardContainer = document.querySelector('.dashboard');\r\n    const nuevaTareaBtn = document.querySelector('#agregar-tarea');\r\n    nuevaTareaBtn.addEventListener('click', ()=> {\r\n        mostrarFormulario();\r\n    });\r\n\r\n    obtenerTareas();\r\n\r\n    filtros.forEach( filtro => {\r\n        filtro.addEventListener('input', ()=> {\r\n            filtrarTareas(filtro.value);\r\n        })\r\n    })\r\n\r\n    function filtrarTareas(valor) {\r\n        if( valor === '') {\r\n            mostrarTareas(tareas)\r\n            return\r\n        }\r\n\r\n        tareasFiltradas = tareas.filter( tarea => tarea.estado === valor);\r\n        mostrarTareas(tareasFiltradas);\r\n    }\r\n\r\n    function mostrarFormulario(edicion = false, tarea) {\r\n        modal = document.createElement('DIV');\r\n        modal.classList.add('modal');\r\n        modal.innerHTML = `\r\n            <form class=\"formulario cerrado nueva-tarea\">\r\n                <legend>${edicion ? 'Cambiar nombre' : 'Añade una nueva tarea'}</legend>\r\n                <div class=\"campo\">\r\n                    <label for=\"nombre\">Tarea</label>\r\n                    <input \r\n                    type=\"text\"\r\n                    name=\"tarea\"\r\n                    placeholder=\"${edicion ? 'Nuevo Nombre' : 'Añadir Tarea'}\"\r\n                    id=\"tarea\"\r\n                    value=\"${edicion ? tarea.nombre : ''}\"\r\n                    >\r\n                </div>\r\n                <div class=\"opciones\">\r\n                    <input type=\"submit\" class=\"submit-nueva-tarea\" value=\"${edicion ? 'Cambiar Nombre' : 'Añadir Tarea'}\">\r\n                    <button type=\"button\" class=\"cerrar-modal\">Cancelar</button>\r\n                </div>\r\n            </form>\r\n        `;\r\n        dashboardContainer.appendChild(modal);\r\n        \r\n        formulario = document.querySelector('.formulario');\r\n        setTimeout(() => {\r\n            formulario.classList.remove('cerrado');\r\n            formulario.classList.add('abierto');\r\n        }, 10);\r\n\r\n        modal.addEventListener('click', (e) => {\r\n            cerrarModal(e.target);\r\n        });\r\n        if( edicion ) {\r\n            formulario.addEventListener('submit', (e)=> {\r\n                e.preventDefault();\r\n                const tareaActualizada = {...tarea};\r\n                tareaActualizada.nombre = document.querySelector('#tarea').value.trim();\r\n                const cambio = cambiarNombreTarea(tareaActualizada);\r\n\r\n                if ( cambio ) {\r\n                    setTimeout(()=> {\r\n                        cerrarModal(modal)\r\n                    }, 800)\r\n                };\r\n\r\n            });\r\n        } else {\r\n            formulario.addEventListener('submit', validarFormulario);\r\n        }\r\n    }\r\n\r\n    function cerrarModal(modal1) {\r\n        if(modal1.classList.contains('cerrar-modal') || modal1.classList.contains('modal')) {\r\n            formulario.classList.add('cerrado');\r\n            formulario.classList.remove('abierto');\r\n                \r\n            setTimeout(()=> {\r\n                modal.remove();\r\n            }, 450);\r\n            }\r\n    }\r\n\r\n    function validarFormulario(e) {\r\n    e.preventDefault();\r\n    const tarea = document.querySelector('#tarea').value.trim();\r\n    if( tarea.length < 5 ) {\r\n        mostrarAlerta('error', 'El nombre de la tarea debe ser mayor a 5 caracteres', document.querySelector('.formulario legend'));\r\n        return;\r\n    }\r\n    agregarTarea(tarea);\r\n    }\r\n\r\n    async function agregarTarea(tarea) {\r\n        const url = `${location.origin}/api/tareas/crear`;\r\n        const datosUrl = obtenerDatosUrl();\r\n        const datos = new FormData();\r\n        datos.append('nombre', tarea);\r\n        datos.append('proyectoId', datosUrl.id);\r\n\r\n        const btnSubmit = formulario.querySelector('.submit-nueva-tarea');\r\n        btnSubmit.disabled = true;\r\n\r\n        try {\r\n            const res = await fetch(url, {\r\n                method: 'POST',\r\n                body:datos\r\n            });\r\n\r\n            const respuesta = await res.json();\r\n            mostrarAlerta( respuesta.tipo, respuesta.mensaje, document.querySelector('.formulario legend') );\r\n\r\n            if( respuesta.tipo = 'correcto' ) {\r\n                formulario.reset();\r\n                btnSubmit.disabled = false;\r\n\r\n                const tareaObj = {\r\n                    id: respuesta.id,\r\n                    nombre: tarea,\r\n                    estado: \"0\",\r\n                    proyectoId: respuesta.proyectoId\r\n                }\r\n\r\n                tareas = [...tareas, tareaObj];\r\n                mostrarTareas(tareas);\r\n            } else {\r\n                btnSubmit.disabled = false;\r\n            }\r\n\r\n        } catch (err) {\r\n            mostrarAlerta('error', 'Hubo un error en el servidor',document.querySelector('.formulario legend'))\r\n            btnSubmit.disabled = false;\r\n        }\r\n    }\r\n\r\n    async function cambiarNombreTarea(tarea) {\r\n        const btnSubmit = document.querySelector('.submit-nueva-tarea');\r\n        btnSubmit.disabled = true;\r\n        \r\n        const cambioNombre = await actualizarTarea(tarea);\r\n        if ( cambioNombre ) {\r\n            btnSubmit.disabled = false;\r\n            mostrarAlerta('correcto', 'Nombre Cambiado', document.querySelector('.formulario legend')); \r\n            return true;\r\n        } else {\r\n            btnSubmit.disabled = false;\r\n            return false;\r\n        }\r\n    }\r\n\r\n    function cambiarEstadoActual(tarea) {\r\n        const nuevoEstado =  tarea.estado === \"1\" ? \"0\" : \"1\";\r\n        tarea.estado = nuevoEstado;\r\n        $res = actualizarTarea(tarea);\r\n    }\r\n\r\n    async function actualizarTarea(tarea) {\r\n        const {estado, id, nombre} = tarea;\r\n        const datos = new FormData();\r\n        datos.append('id', id);\r\n        datos.append('nombre', nombre);\r\n        datos.append('estado', estado);\r\n        datos.append('proyectoId', obtenerDatosUrl().id);\r\n\r\n        try {\r\n            const url = `${location.origin}/api/tareas/actualizar`;\r\n\r\n            const res = await fetch(url, {\r\n                method: 'POST',\r\n                body: datos\r\n            });\r\n\r\n            const resultado = await res.json();\r\n\r\n            if( resultado.tipo === \"correcto\") {\r\n                tareas = tareas.map( tarea => {\r\n                    if ( tarea.id === id ) {\r\n                        tarea.nombre = nombre\r\n                        tarea.estado = estado\r\n                    }\r\n                    return tarea;\r\n                })\r\n\r\n                mostrarTareas(tareas);\r\n                return true;\r\n            }\r\n\r\n        } catch (err) {\r\n            console.log(err);\r\n            return false;\r\n        }\r\n    }\r\n\r\n    async function eliminarTarea(tarea) {\r\n        const {id, proyectoId} = tarea\r\n        const url = `${location.origin}/api/tareas/eliminar`;\r\n\r\n        const datos = new FormData();\r\n        datos.append('id', id);\r\n        datos.append('proyectoId', proyectoId);\r\n\r\n        try {\r\n            const res = await fetch(url, {\r\n                method: 'POST',\r\n                body: datos\r\n            })\r\n    \r\n            const resultado = await res.json();\r\n            \r\n            if( resultado.tipo === \"correcto\") {\r\n                tareas = tareas.filter( tarea => tarea.id !== id);\r\n    \r\n                mostrarTareas(tareas);\r\n            }\r\n        } catch (err) {\r\n            console.log(err);\r\n        }        \r\n    }\r\n\r\n    async function obtenerTareas() {\r\n        const datosUrl = obtenerDatosUrl();\r\n        const url = `${location.origin}/api/tareas?id=${datosUrl.id}`;\r\n\r\n        try {\r\n            const res = await fetch(url);\r\n            const resultado = await res.json();\r\n            tareas = resultado.tareas;\r\n\r\n            mostrarTareas(tareas);\r\n        } catch (err) {\r\n            console.log(err);\r\n        }\r\n    }\r\n\r\n    function mostrarTareas(tareas) {\r\n        const listaAnterior = document.querySelector('#listado-tareas');\r\n        if( listaAnterior ) listaAnterior.remove();\r\n\r\n        const estados = {\r\n            0: 'Pendiente',\r\n            1: 'Completado'\r\n        };\r\n        const contenedorPagina = document.querySelector('.contenedor-sm');\r\n        const listaTareas = document.createElement('UL');\r\n        listaTareas.classList.add('listado-tareas');\r\n        listaTareas.id = 'listado-tareas';\r\n\r\n        \r\n        if( tareas.length === 0 ) {\r\n            const textoNoTareas = document.createElement('LI');\r\n            textoNoTareas.className = 'no-tareas';\r\n            textoNoTareas.textContent = 'No Hay tareas';\r\n\r\n            listaTareas.appendChild(textoNoTareas);\r\n            contenedorPagina.appendChild(listaTareas);\r\n            return;\r\n        }\r\n\r\n        tareas.forEach( tarea => {\r\n            const {id, nombre, estado} = tarea;\r\n            const contenedorTarea = document.createElement('LI');\r\n            contenedorTarea.classList.add('tarea');\r\n            contenedorTarea.dataset.tareaId = id;\r\n\r\n            const nombreTarea = document.createElement('P');\r\n            nombreTarea.textContent = nombre;\r\n            nombreTarea.addEventListener('dblclick', ()=> {\r\n                mostrarFormulario(true, {...tarea});\r\n            });\r\n\r\n            const opcionesDiv = document.createElement('DIV');\r\n            opcionesDiv.classList.add('opciones');\r\n\r\n            const btnEstadoTarea = document.createElement('BUTTON');\r\n            btnEstadoTarea.classList.add('estado-tarea');\r\n            btnEstadoTarea.classList.add(estados[estado].toLowerCase());\r\n            btnEstadoTarea.dataset.estadoTarea = estado;\r\n            btnEstadoTarea.textContent = estados[estado];\r\n            btnEstadoTarea.ondblclick = ()=> {\r\n                cambiarEstadoActual({...tarea})\r\n            }\r\n\r\n            const btnEliminarTarea = document.createElement('BUTTON');\r\n            btnEliminarTarea.classList.add('eliminar-tarea');\r\n            btnEliminarTarea.dataset.idTarea = id;\r\n            btnEliminarTarea.textContent = 'Eliminar Tarea';\r\n            btnEliminarTarea.ondblclick = ()=> {\r\n                eliminarTarea({...tarea});\r\n            }\r\n\r\n            opcionesDiv.append( btnEstadoTarea, btnEliminarTarea );\r\n            contenedorTarea.append( nombreTarea, opcionesDiv );\r\n\r\n            listaTareas.appendChild(contenedorTarea);\r\n        })\r\n\r\n        contenedorPagina.appendChild(listaTareas);\r\n    }\r\n\r\n    function mostrarAlerta(tipo, mensaje, referencia) {\r\n        const alertaAnterior = document.querySelector('.alerta');\r\n        if( alertaAnterior ) alertaAnterior.remove();\r\n\r\n        const alerta = document.createElement('DIV');\r\n        alerta.classList.add('alerta', tipo);\r\n        alerta.textContent = mensaje;\r\n\r\n        referencia.parentElement.insertBefore(alerta, referencia.nextElementSibling);\r\n\r\n        setTimeout(()=> {\r\n            alerta.remove()\r\n        }, 3000);\r\n    }\r\n\r\n    function obtenerDatosUrl() {\r\n        const urlParams = new URLSearchParams(location.search);\r\n        const objectParams = Object.fromEntries(urlParams.entries());\r\n        return objectParams;\r\n    }\r\n})();\r\n"]}